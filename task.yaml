AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: VPC ID where the resources will be created

  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Description: List of Subnet IDs for ECS instances

Resources:
  EFSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for EFS
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 2049
          ToPort: 2049
          SourceSecurityGroupId: !Ref ECSSecurityGroup
  ECSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for ECS instances
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80

  ALBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for ALB
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  FileSystem:
    Type: 'AWS::EFS::FileSystem'
    Properties:
      FileSystemTags:
        - Key: Name
          Value: "tm-devops-trainee-efs"
      PerformanceMode: "generalPurpose"
      LifecyclePolicies:
        - TransitionToIA: "AFTER_7_DAYS"

  ECSRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Principal:
              Service: 'ecs-tasks.amazonaws.com'
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: 'ECSRolePolicy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: 'Allow'
                Action:
                  - 'ecr:GetAuthorizationToken'
                  - 'ecr:BatchCheckLayerAvailability'
                  - 'ecr:BatchGetImage'
                Resource: '*'

  ECSContainerDefinition:
    Type: 'AWS::ECS::TaskDefinition'
    Properties:
      Family: 'tm-devops-trainee-task'
      Cpu: 512
      Memory: 1024
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn: !GetAtt ECSRole.Arn
      ContainerDefinitions:
        - Name: 'nginx-container'
          Image: public.ecr.aws/nginx/nginx:mainline-alpine
          Cpu: 256
          Memory: 512
          PortMappings:
            - ContainerPort: 80
          MountPoints:
            - SourceVolume: "efs-volume"
              ContainerPath: "/usr/share/nginx/html"
          Essential: true
      Volumes:
        - Name: efs-volume
          EFSVolumeConfiguration:
            FilesystemId: !Ref FileSystem
            RootDirectory: "/"
            TransitEncryption: ENABLED
  ECSCluster:
    Type: "AWS::ECS::Cluster"
  ECSService:
    Type: 'AWS::ECS::Service'
    Properties:
      Cluster: !Ref ECSCluster
      DesiredCount: 1
      LaunchType: 'FARGATE'
      TaskDefinition: !Ref ECSContainerDefinition
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets: !Ref SubnetIds
          SecurityGroups: [!Ref ECSSecurityGroup]

  LoadBalancer:
    Type: 'AWS::ElasticLoadBalancingV2::LoadBalancer'
    Properties:
      Name: 'tm-devops-trainee-alb'
      Subnets: !Ref SubnetIds
      SecurityGroups: [!Ref ALBSecurityGroup]
      Scheme: 'internet-facing'
      LoadBalancerAttributes:
        - Key: idle_timeout.timeout_seconds
          Value: '60'

  TargetGroup:
    Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'
    Properties:
      Name: 'tm-devops-trainee-target-group'
      Port: 80
      Protocol: 'HTTP'
      VpcId: !Ref VpcId
      HealthCheckIntervalSeconds: 30
      HealthCheckPath: '/'
      HealthCheckProtocol: 'HTTP'
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 2
      Matcher:
        HttpCode: '200'
      TargetType: 'ip'

  Listener:
    Type: 'AWS::ElasticLoadBalancingV2::Listener'
    Properties:
      DefaultActions:
        - Type: 'fixed-response'
          FixedResponseConfig:
            ContentType: 'text/plain'
            StatusCode: '200'
            MessageBody: 'Hello, Techmagic!'
      LoadBalancerArn: !Ref LoadBalancer
      Port: 80
      Protocol: 'HTTP'
      DefaultActions:
        - Type: 'forward'
          TargetGroupArn: !Ref TargetGroup
